name: Manually Build distroless dnsi BuildEnv Docker Image

on:
  workflow_dispatch:
      
jobs: 
  buildvars:
    runs-on: ubuntu-latest
    outputs:
      BUILDENV_BUILD_DATE: ${{ steps.IMPORT_BUILDVARS.outputs.BUILDENV_BUILD_DATE }}
      DNSI_VERSION: ${{ steps.IMPORT_BUILDVARS.outputs.DNSI_VERSION }}
      DNSI_BUILDENV_VERSION: ${{ steps.IMPORT_BUILDVARS.outputs.DNSI_BUILDENV_VERSION }}    
    steps:            
      - name: Checkout source
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set build variables
        id: IMPORT_BUILDVARS
        run: |
          echo IMAGE_BUILD_DATE=$(date -u) >> $GITHUB_OUTPUT
          echo DNSI_VERSION=0.2.0 >> $GITHUB_OUTPUT
          echo DNSI_BUILDENV_VERSION=0.2.0-0 >> $GITHUB_OUTPUT     
         
  build: 
    runs-on: ubuntu-latest    
    needs: buildvars
    steps:
      - name: Checkout source
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
     
      - name: Login to Dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
              
      - name: Build and push
        uses: docker/build-push-action@v6
        env:
          DOCKERHUB_SLUG: "madnuttah/dnsi"
        with:
#          platforms: linux/386,linux/arm/v6,linux/arm/v7,linux/arm64,linux/amd64
          platforms: linux/386,linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            DOCKERHUB_SLUG=${{ env.DOCKERHUB_SLUG }} 
            BUILDENV_BUILD_DATE=${{ needs.buildvars.outputs.BUILDENV_BUILD_DATE }}
            DNSI_VERSION=${{ needs.buildvars.outputs.DNSI_VERSION }}  
            DNSI_BUILDENV_VERSION=${{ needs.buildvars.outputs.DNSI_BUILDENV_VERSION }}  
          file: ./dnsi/release.Dockerfile   
          push: ${{ github.event_name != 'pull_request' }}
          sbom: ${{ github.event_name != 'pull_request' }}
          provenance: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKERHUB_SLUG }}:${{ needs.buildvars.outputs.DNSI_BUILDENV_VERSION }}      
            ${{ env.DOCKERHUB_SLUG }}:latest 
